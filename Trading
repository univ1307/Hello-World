'Automated Trading

'Master trade function. Safety checks, send order, confirm and log
Sub Trade(product, direction, notional, price As Variant, Optional limit As Variant = "")
    'read all risk data in one go
    Sheets("Risk Management").Calculate
    Set risk_data = Range("Risk_data")
    
    'Safety Checks. Most Important
    a = MachineGun_Check(risk_data)
    b = NotionalCheck_Single(notional)
    C = NotionalCheck_Daily(risk_data, notional)
    d = PnLCheck(risk_data)
    e = VARCheck_Single(product, notional)
    f = VARCheck_DailyTotal(risk_data, product, notional)
    
    If a And b And C And d And e And f Then
    
        'Send order and confirm
        If limit = "" Then
            size = IGSize(product, notional, price)
        Else
            size = IGSize(product, notional, limit)
        End If
        
        loginButton_Click
        TradeButton_Click product, direction, size
        
        m = direction & " " & product
        'MsgBox m
        'Log
            'update today's total ticket number and notional, super important for safety checks
            todays_tickets = risk_data.Cells(3, 3)
            todays_notional = risk_data.Cells(4, 3)
            Info = Array(todays_tickets + 1, todays_notional + Abs(notional))
            Range(Range("TodaysTickets"), Range("TodaysTickets").Offset(1, 0)) = Application.WorksheetFunction.Transpose(Info)
            'log the deal
            n = risk_data.Cells(8, 3)
            dir_sign = fromDirectionToNumber(direction)
            trade_info = Array(Now(), product, dir_sign * notional, limit)
            Range(Range("TodaysTrades").Offset(n + 1, 0), Range("TodaysTrades").Offset(n + 1, 3)) = trade_info
    End If
End Sub
'
' Trade Function from IG
'
Public Sub TradeButton_Click(product, direction, size As Variant, Optional limit As Variant = "")

    'If Not m_loggedIn Then
    '   MsgBox "Please login first"
    '   Exit Sub
    'End If

    Dim epic As String
    Dim expiry As String
    Dim d As String
    Dim s As String
    Dim crncy As String
    Dim l As String
    Dim dealReference As String
    Dim dealId As String
    Dim count As Integer
    
    epic = IG_epic(product)
    expiry = "DFB"
    d = direction
    crncy = "GBP"
    s = size
    l = limit
    
    dealReference = restClient.createPosition(epic, expiry, d, s, crncy, l)
    
    ' Wait for the deal confirmation
    
    If dealReference <> "" Then
     
       'appendActivity "Deal submitted: " + dealReference
       dealId = ""
       count = 0
       Do While dealId = "" And count < 3
            Application.Wait (Now + TimeValue("0:00:01"))
            dealId = restClient.dealConfirmation(dealReference)
            count = count + 1
       Loop
       If dealId <> "" Then
          dealId = restClient.dealConfirmation(dealReference)
       End If
       If dealId = "" Then
          'appendActivity "Failed to retrieve deal confirmation"
       Else
          'appendActivity "Deal confirmation: " + dealId
       End If
    
    End If

End Sub

'convert notional to IG size
Function IGSize(product, notional, price As Variant) As Variant
    IGSize = Round(notional / (price * scale_factor(product)), 2)
End Function

Sub test()
    Trade "JP", "SELL", 5450, 108.39
    s = IGSize("NZ", 15000, 0.68)
    Sheets("Risk Management").Calculate
    Set risk_data = Range("Risk_data")
    product = "JP"
    direction = "Buy"
    notional = 1000000
    f = VARCheck_DailyTotal(risk_data, product, notional)
            n = risk_data.Cells(8, 3)
    
    limit = ""
            trade_info = Array(Now(), product, direction, notional, limit)
            Range(Range("TodaysTrades").Offset(n + 1, 0), Range("TodaysTrades").Offset(n + 1, 4)) = trade_info
End Sub
